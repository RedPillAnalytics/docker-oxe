#!/bin/bash
ME=`basename "$0"`

# Initial values
DOCKERFILE='.'

# owner may be NULL
IMAGE=`echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]'`
echo "Owner: $OWNER"

# branch may be NULL
BRANCH=`echo $GITHUB_REF | sed -e "s/refs\/heads\///g"`

# if this is a PR, then set BRANCH to the MERGING branch
if [ $GITHUB_HEAD_REF ] 
then
  BRANCH = $GITHUB_HEAD_REF
fi

# capture the TAG or NULL
TAG=`echo ${GITHUB_REF} | sed -e "s/refs\/tags\///g"`

# IF GITHUB_REF doesn't exist, then latest
# If this is a TAG, then use a TAG
# If this is a BRANCH, then use BRANCH
# Else use latest
if [ -z $GITHUB_REF ]
then
  VERSION='latest'
elif [ $TAG != $GITHUB_REF ]
then
  VERSION=$TAG
elif [ $BRANCH != $GITHUB_REF ]
then
  VERSION=$BRANCH
else
  VERSION='latest'
fi

# Process CL Args
while getopts ":d:u:p:r:v:i:sh" opt; do
  case ${opt} in
    d ) # directory
      DIRECTORY=$OPTARG;;
    u ) # username
      USERNAME=$OPTARG;;
    p ) # password
      PASSWORD=$OPTARG;;
    r ) # password
      REGISTRY=$OPTARG;;
    s ) # password
      SNAPSHOT=true;;
    v ) # version
      VERSION=$OPTARG;;
    i ) # image
      IMAGE=$OPTARG;;
    \? )
      echo "Invalid option: -$OPTARG" 1>&2
      exit 1
      ;;
  esac
done

DOCKERNAME="${IMAGE}:${VERSION}"

docker login -u ${USERNAME} -p ${PASSWORD}

# go ahead and build and create both tags. Doesn't cost anything
docker build -t ${DOCKERNAME} $DIRECTORY
docker push ${DOCKERNAME}

# if either snapshot or a PR, then push the SHA version
if [ "$SNAPSHOT" ] && [ "$GITHUB_SHA" ]
then
  DOCKERSHA="${IMAGE}:${GITHUB_SHA}"
  docker build -t $DOCKERSHA $DIRECTORY
  docker push $DOCKERSHA
fi

docker logout
